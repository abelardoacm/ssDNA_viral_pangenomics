legend.title = "cluster",
label = "none",
title = paste(family, "clusters")
)
setwd("../Lists_for_sample_reduction/") #Coming back
#Draw PCA and ellipses
setwd("../Clustering_graphics")
plot(OrderedDist.df$MeanDif, type = "p", ylab = "Mean Difference", main = "Sorted increasing values of mean pairwise distance by genome" ) #Point plot
View(OrderedDist.df)
#Point plot of ordered distances.
#Visualize sums of distances distribution
ene <- nrow(Distancias.matrix) #number of genomes
SumDist <- (rowSums(Distancias.matrix)) #get sum of distances by genome
SumDist
SumDist.df
SumDist.df <- as.data.frame(SumDist) #transform to data frame
SumDist.df
SumDist.df$Membership <- Pertenencia.df$Consenso
SumDist.df
Pertenencia.df
OrderedDist.df <- SumDist.df[order(SumDist.df$MeanDif),] #sort sum of distances
SumDist.df$Membership <- Pertenencia.df$Consenso
OrderedDist.df <- SumDist.df[order(SumDist.df$MeanDif),] #sort sum of distances
#Point plot of ordered distances.
#Visualize sums of distances distribution
ene <- nrow(Distancias.matrix) #number of genomes
SumDist <- (rowSums(Distancias.matrix)) #get sum of distances by genome
SumDist.df <- as.data.frame(SumDist) #transform to data frame
mean_Distance <- (SumDist.df$SumDist)/ene #get average sum of distances per genome
SumDist.df$MeanDif <- mean_Distance #save average sum to data frame
OrderedDist.df <- SumDist.df[order(SumDist.df$MeanDif),] #sort sum of distances
#Point plot of ordered distances.
#Visualize sums of distances distribution
ene <- nrow(Distancias.matrix) #number of genomes
SumDist <- (rowSums(Distancias.matrix)) #get sum of distances by genome
SumDist.df <- as.data.frame(SumDist) #transform to data frame
mean_Distance <- (SumDist.df$SumDist)/ene #get average sum of distances per genome
SumDist.df$MeanDif <- mean_Distance #save average sum to data frame
SumDist.df$Membership <- Pertenencia.df$Consenso
OrderedDist.df <- SumDist.df[order(SumDist.df$MeanDif),] #sort sum of distances
#Point plot of ordered distances.
#Visualize sums of distances distribution
ene <- nrow(Distancias.matrix) #number of genomes
SumDist <- (rowSums(Distancias.matrix)) #get sum of distances by genome
SumDist.df <- as.data.frame(SumDist) #transform to data frame
mean_Distance <- (SumDist.df$SumDist)/ene #get average sum of distances per genome
SumDist.df$MeanDif <- mean_Distance #save average sum to data frame
SumDist.df$Membership <- Pertenencia.df$Consenso
OrderedDist.df <- SumDist.df[order(SumDist.df$MeanDif),] #sort sum of distances
OrderedDist.df
outfile3 <- paste(family,"_distances_pplot.png") #name third outfile
plot(OrderedDist.df$MeanDif, type = "p", ylab = "Mean Difference", main = "Sorted increasing values of mean pairwise distance by genome" ) #Point plot
ggplot(data=OrderedDist.df$MeanDif, aes(x=dose, y=len, group=1)) +
geom_line()+
geom_point()
plot(OrderedDist.df$MeanDif, type = "p", ylab = "Mean Difference", main = "Sorted increasing values of mean pairwise distance by genome" ) #Point plot
ggplot(data=OrderedDist.df$MeanDif, aes(x=dose, y=len, group=1)) +
geom_line()+
geom_point()
ggplot(data=OrderedDist.df, aes(x=dose, y=len, group=1)) +
geom_line()+
geom_point()
ggplot(data=OrderedDist.df, aes(x=dose, y=len, group=1)) +
geom_line()+
geom_point()
IndexByDistSum <- seq(from = 1, to = ene)
IndexByDistSum
OrderedDist.df$IndexByDistSum <- IndexByDistSum
View(OrderedDist.df)
library("ggplot2")
plot(OrderedDist.df$MeanDif, type = "p", ylab = "Mean Difference", main = "Sorted increasing values of mean pairwise distance by genome" ) #Point plot
ggplot(data=OrderedDist.df, aes(OrderedDist.df$IndexByDistSum, OrderedDist.df$MeanDif))
ggplot(data=OrderedDist.df, aes(OrderedDist.df$IndexByDistSum, OrderedDist.df$MeanDif)) +
geom_line()+
geom_point()
ggplot(data=OrderedDist.df, aes(OrderedDist.df$IndexByDistSum, OrderedDist.df$MeanDif)) +
geom_point()
ggplot(data=OrderedDist.df, aes(OrderedDist.df$IndexByDistSum, OrderedDist.df$MeanDif)) +
geom_point(aes(colour = factor(cyl)), size = 4)
ggplot(data=OrderedDist.df, aes(OrderedDist.df$IndexByDistSum, OrderedDist.df$MeanDif)) +
geom_point(aes(colour = factor(OrderedDist.df$Membership)), size = 4)
ggplot(data=OrderedDist.df, aes(OrderedDist.df$IndexByDistSum, OrderedDist.df$MeanDif)) +
geom_point(aes(colour = factor(OrderedDist.df$Membership)), size = 4) +
labs(fill = "Dose (mg)")
ggplot(data=OrderedDist.df, aes(OrderedDist.df$IndexByDistSum, OrderedDist.df$MeanDif)) +
geom_point(aes(colour = factor(OrderedDist.df$Membership)), size = 4) +
labs(fill = "Dose (mg)")
dev.off()
p <- ggplot(data=OrderedDist.df, aes(OrderedDist.df$IndexByDistSum, OrderedDist.df$MeanDif)) +
geom_point(aes(colour = factor(OrderedDist.df$Membership)), size = 4)
p + labs(fill = "Dose (mg)")
p + labs(fill = "Dose (mg)")
p <- ggplot(data=OrderedDist.df, aes(IndexByDistSum, MeanDif)) +
geom_point(aes(colour = factor(Membership)), size = 4)
p + labs(fill = "Dose (mg)")
p <- ggplot(data=OrderedDist.df, aes(IndexByDistSum, MeanDif)) +
geom_point(aes(colour = factor(Membership)), size = 1)
p + labs(fill = "Dose (mg)")
p <- ggplot(data=OrderedDist.df, aes(IndexByDistSum, MeanDif)) +
geom_point(aes(colour = factor(Membership)), size = 2)
p + labs(fill = "Dose (mg)")
SumDist.df$Membership <- as.factor(Pertenencia.df$Consenso)
OrderedDist.df <- SumDist.df[order(SumDist.df$MeanDif),] #sort sum of distances
IndexByDistSum <- seq(from = 1, to = ene)
OrderedDist.df$IndexByDistSum <- IndexByDistSum
outfile3 <- paste(family,"_distances_pplot.png") #name third outfile
plot(OrderedDist.df$MeanDif, type = "p", ylab = "Mean Difference", main = "Sorted increasing values of mean pairwise distance by genome" ) #Point plot
ggplot(data=OrderedDist.df, aes(IndexByDistSum, MeanDif)) +
geom_point(aes(colour = factor(Membership)), size = 2) +
theme(legend.position="top") +
labs(fill = "Membership")
ggplot(data=OrderedDist.df, aes(IndexByDistSum, MeanDif)) +
geom_point(aes(colour = Membership), size = 2) +
theme(legend.position="top") +
labs(fill = "Membership")
ggplot(data=OrderedDist.df, aes(IndexByDistSum, MeanDif)) +
geom_point(aes(colour = Membership), size = 2) +
theme(legend.position="top") +
labs(color='NEW LEGEND TITLE')
legendtitle <- paste(family, "ordered mean distances by cluster")
plot(OrderedDist.df$MeanDif, type = "p", ylab = "Mean Difference", main = "Sorted increasing values of mean pairwise distance by genome" ) #Point plot
ggplot(data=OrderedDist.df, aes(IndexByDistSum, MeanDif)) +
geom_point(aes(colour = Membership), size = 2) +
theme(legend.position="top") +
labs(color= legendtitle )
plot(OrderedDist.df$MeanDif, type = "p", ylab = "Mean Difference", main = "Sorted increasing values of mean pairwise distance by genome" ) #Point plot
ggplot(data=OrderedDist.df, aes(IndexByDistSum, MeanDif)) +
geom_point(aes(colour = Membership), size = 2) +
theme(legend.position="top") +
labs(color= legendtitle )
plot(OrderedDist.df$MeanDif, type = "p", ylab = "Mean Difference", main = "Sorted increasing values of mean pairwise distance by genome" ) #Point plot
ggplot(data=OrderedDist.df, aes(IndexByDistSum, MeanDif)) +
geom_point(aes(colour = Membership), size = 2) +
theme(legend.position="top") +
labs(color= legendtitle )
ggplot(data=OrderedDist.df, aes(IndexByDistSum, MeanDif)) +
geom_point(aes(colour = Membership), size = 2, shape = Membership) +
theme(legend.position="top") +
labs(color= legendtitle )
ggplot(data=OrderedDist.df, aes(IndexByDistSum, MeanDif)) +
geom_point(aes(colour = Membership), size = 2, shape = Membership) +
theme(legend.position="top") +
labs(color= legendtitle )
plot(OrderedDist.df$MeanDif, type = "p", ylab = "Mean Difference", main = "Sorted increasing values of mean pairwise distance by genome" ) #Point plot
ggplot(data=OrderedDist.df, aes(IndexByDistSum, MeanDif)) +
geom_point(aes(colour = Membership, shape = Membership), size = 2) +
theme(legend.position="top") +
labs(color= legendtitle )
dev.off()
ggplot(data=OrderedDist.df, aes(IndexByDistSum, MeanDif)) +
geom_point(aes(colour = Membership, shape = Membership), size = 2) +
theme(legend.position="top") +
labs(color= legendtitle )
ggplot(data=OrderedDist.df, aes(IndexByDistSum, MeanDif)) +
geom_point(aes(colour = Membership), size = 2) +
theme(legend.position="top") +
labs(color= legendtitle )
ggplot(data=OrderedDist.df, aes(IndexByDistSum, MeanDif)) +
plot(OrderedDist.df$MeanDif, type = "p", ylab = "Mean Difference", main = "Sorted increasing values of mean pairwise distance by genome" ) #Point plot
ggplot(data=OrderedDist.df, aes(IndexByDistSum, MeanDif)) +
geom_point(aes(colour = Membership), size = 2, alpha = 0.1) +
theme(legend.position="top") +
labs(color= legendtitle )
ggplot(data=OrderedDist.df, aes(IndexByDistSum, MeanDif)) +
geom_point(aes(colour = Membership), size = 2, alpha = 0.5) +
theme(legend.position="top") +
labs(color= legendtitle )
ggplot(data=OrderedDist.df, aes(IndexByDistSum, MeanDif)) +
geom_point(aes(colour = Membership), size = 2, alpha = 0.2) +
theme(legend.position="top") +
labs(color= legendtitle )
#Point plot
ggplot(data=OrderedDist.df, aes(IndexByDistSum, MeanDif)) +
geom_point(aes(colour = Membership), size = 2, alpha = 0.2) +
theme(legend.position="top") +
labs(color= legendtitle )
dev.off()
#Point plot
ggplot(data=OrderedDist.df, aes(IndexByDistSum, MeanDif)) +
geom_point(aes(colour = Membership), size = 2, alpha = 0.2) +
theme(legend.position="top") +
labs(color= legendtitle )
#Clusters PCA
res.pca <- prcomp(datos, scale = TRUE) #make PCA
groups <- as.factor(Pertenencia.df$Consenso) #recover clusters
fviz_pca_ind(res.pca,
col.ind = groups, # color by groups
palette = c("#00AFBB",  "#FC4E07", "#50f0d0", "#f05070", "#d050f0", "#70f050", "#f0d050", "#ffd88d", "#5086a7", "#dd9082"),
addEllipses = TRUE,
legend.title = "cluster",
label = "none",
title = paste(family, "clusters")
)
fviz_pca_ind(res.pca,
col.ind = groups, # color by groups
palette = c("#00AFBB", "#FC4E07", "#50f0d0", "#f05070", "#d050f0", "#70f050", "#f0d050", "#ffd88d", "#5086a7", "#dd9082" ,"#093d3a", "#196f69", "#786045", "#d59c2c", "#336936", "#d050f0", "#70f050", "#f0d050", "#50f0d0", "#f05070"),
addEllipses = TRUE,
legend.title = "cluster",
label = "none",
title = paste(family, "clusters")
)
#Point plot
ggplot(data=OrderedDist.df, aes(IndexByDistSum, MeanDif)) +
geom_point(aes(colour = Membership), size = 2, alpha = 0.2) +
theme(legend.position="top") +
labs(color= legendtitle )
dev.off()
#Clusters PCA
res.pca <- prcomp(TaxDelSubset, scale = TRUE) #make PCA
groups <- as.factor(TaxDelSubset$Membership) #recover clusters
fviz_pca_ind(res.pca,
col.ind = groups, # color by groups
palette = c("#00AFBB", "#FC4E07", "#50f0d0", "#f05070", "#d050f0", "#70f050", "#f0d050", "#ffd88d", "#5086a7", "#dd9082" ,"#093d3a", "#196f69", "#786045", "#d59c2c", "#336936", "#d050f0", "#70f050", "#f0d050", "#50f0d0", "#f05070"),
addEllipses = TRUE,
legend.title = "cluster",
label = "none",
title = paste(family, "clusters")
)
#Subset deleting with TaxDel
TaxDelSubset <- rownames_to_column(CPFSCC.df)
TaxDelSubset$Membership <- TaxidPertenencia$Pertenencia
TaxDelSubset <- TaxDelSubset[!(TaxDelSubset$rowname %in% TaxDel), ]
groups <- as.factor(TaxDelSubset$Membership) #recover clusters
row.names(TaxDelSubset) <- TaxDelSubset$rowname
TaxDelSubset$rowname <- NULL
TaxDelSubset$Membership <- NULL
#Clusters PCA
res.pca <- prcomp(TaxDelSubset, scale = TRUE) #make PCA
fviz_pca_ind(res.pca,
col.ind = groups, # color by groups
palette = c("#00AFBB", "#FC4E07", "#50f0d0", "#f05070", "#d050f0", "#70f050", "#f0d050", "#ffd88d", "#5086a7", "#dd9082" ,"#093d3a", "#196f69", "#786045", "#d59c2c", "#336936", "#d050f0", "#70f050", "#f0d050", "#50f0d0", "#f05070"),
addEllipses = TRUE,
legend.title = "cluster",
label = "none",
title = paste(family, "clusters")
)
View(TaxDelSubset)
View(TaxDelSubset)
#Linear plot
Distances <- dist(TaxDelSubset, method = "euclidean", diag=TRUE) #Estimate pairwise distances
Distances.matrix <- as.matrix(Distances) #Transform to matrix
n <- nrow(Distancias.matrix) #number of genomes
#Subset deleting with TaxDel
TaxDelSubset <- rownames_to_column(CPFSCC.df)
TaxDelSubset$Membership <- TaxidPertenencia$Pertenencia
TaxDelSubset <- TaxDelSubset[!(TaxDelSubset$rowname %in% TaxDel), ]
groups <- as.factor(TaxDelSubset$Membership) #recover clusters
row.names(TaxDelSubset) <- TaxDelSubset$rowname
TaxDelSubset$rowname <- NULL
TaxDelSubset$Membership <- NULL
#Linear plot
Distances <- dist(TaxDelSubset, method = "euclidean", diag=TRUE) #Estimate pairwise distances
#Linear plot
Distances <- dist(TaxDelSubset, method = "euclidean", diag=TRUE) #Estimate pairwise distances
Distances.matrix <- as.matrix(Distances) #Transform to matrix
n <- nrow(Distancias.matrix) #number of genomes
#Linear plot
Distances <- dist(TaxDelSubset, method = "euclidean", diag=TRUE) #Estimate pairwise distances
Distances.matrix <- as.matrix(Distances) #Transform to matrix
n <- nrow(Distances.matrix) #number of genomes
#Linear plot
Distances <- dist(TaxDelSubset, method = "euclidean", diag=TRUE) #Estimate pairwise distances
Distances.matrix <- as.matrix(Distances) #Transform to matrix
n <- nrow(Distances.matrix) #number of genomes
SumDistAfter <- (rowSums(Distances.matrix)) #get sum of distances by genome
SumDistAfter.df <- as.data.frame(SumDistAfter) #transform to data frame
mean_Distance <- (SumDistAfter$SumDist)/ene #get average sum of distances per genome
#Linear plot
Distances <- dist(TaxDelSubset, method = "euclidean", diag=TRUE) #Estimate pairwise distances
Distances.matrix <- as.matrix(Distances) #Transform to matrix
n <- nrow(Distances.matrix) #number of genomes
SumDistAfter <- (rowSums(Distances.matrix)) #get sum of distances by genome
SumDistAfter.df <- as.data.frame(SumDistAfter) #transform to data frame
mean_Distance <- (SumDistAfter$SumDist)/ene #get average sum of distances per genome
mean_Distance <- (SumDistAfter.df$SumDist)/ene #get average sum of distances per genome
#Linear plot
Distances <- dist(TaxDelSubset, method = "euclidean", diag=TRUE) #Estimate pairwise distances
Distances.matrix <- as.matrix(Distances) #Transform to matrix
n <- nrow(Distances.matrix) #number of genomes
SumDistAfter <- (rowSums(Distances.matrix)) #get sum of distances by genome
SumDistAfter.df <- as.data.frame(SumDistAfter) #transform to data frame
mean_Distance <- (SumDistAfter.df$SumDist)/ene #get average sum of distances per genome
SumDistAfter.df$MeanDif <- mean_Distance #save average sum to data frame
SumDistAfter.df$Membership <- as.factor(Pertenencia.df$Consenso)
View(SumDistAfter.df)
View(Distances.matrix)
Ids <- rownames(Distances.matrix)
Ids <- rownames(Distances.matrix)
SumDistAfter.df$Membership <- as.factor(Ids)
OrderedDistAfter.df <- SumDistAfter.df[order(SumDistAfter.df$MeanDif),] #sort sum of distances
OrderedDistAfter.df <- SumDistAfter.df[order(SumDistAfter.df$MeanDif),] #sort sum of distances
IndexByDistSum <- seq(from = 1, to = n)
OrderedDistAfter.df$IndexByDistSum <- IndexByDistSum
View(OrderedDistAfter.df)
ggplot(data=OrderedDistAfter.df, aes(IndexByDistSum, MeanDif)) +
geom_point(aes(colour = Membership), size = 2, alpha = 0.2) +
theme(legend.position="top") +
labs(color= legendtitle )
dev.off()
#Subset deleting with TaxDel
TaxDelSubset <- rownames_to_column(CPFSCC.df)
TaxDelSubset$Membership <- TaxidPertenencia$Pertenencia
TaxDelSubset <- TaxDelSubset[!(TaxDelSubset$rowname %in% TaxDel), ]
groups <- as.factor(TaxDelSubset$Membership) #recover clusters
#Linear plot
Distances <- dist(TaxDelSubset, method = "euclidean", diag=TRUE) #Estimate pairwise distances
TaxDelSubset <- rownames_to_column(CPFSCC.df)
TaxDelSubset$Membership <- TaxidPertenencia$Pertenencia
TaxDelSubset <- TaxDelSubset[!(TaxDelSubset$rowname %in% TaxDel), ]
groups <- as.factor(TaxDelSubset$Membership) #recover clusters
row.names(TaxDelSubset) <- TaxDelSubset$rowname
TaxDelSubset$rowname <- NULL
TaxDelSubset$Membership <- NULL
TaxDelSubset <- rownames_to_column(CPFSCC.df)
TaxDelSubset$Membership <- TaxidPertenencia$Pertenencia
TaxDelSubset <- TaxDelSubset[!(TaxDelSubset$rowname %in% TaxDel), ]
groups <- as.factor(TaxDelSubset$Membership) #recover clusters
row.names(TaxDelSubset) <- TaxDelSubset$rowname
TaxDelSubset$rowname <- NULL
TaxDelSubset$Membership <- NULL
Distances <- dist(TaxDelSubset, method = "euclidean", diag=TRUE) #Estimate pairwise distances
Distances.matrix <- as.matrix(Distances) #Transform to matrix
n <- nrow(Distances.matrix) #number of genomes
SumDistAfter <- (rowSums(Distances.matrix)) #get sum of distances by genome
SumDistAfter.df <- as.data.frame(SumDistAfter) #transform to data frame
mean_Distance <- (SumDistAfter.df$SumDist)/ene #get average sum of distances per genome
SumDistAfter.df$MeanDif <- mean_Distance #save average sum to data frame
Ids <- rownames(Distances.matrix)
memberclust <- c()
SumDistAfter.df$Membership <- as.factor(Ids)
OrderedDistAfter.df <- SumDistAfter.df[order(SumDistAfter.df$MeanDif),] #sort sum of distances
IndexByDistSum <- seq(from = 1, to = n)
OrderedDistAfter.df$IndexByDistSum <- IndexByDistSum
outfile3 <- paste(family,"_distances_pplot_after_sr.png") #name third outfile
legendtitle <- paste(family, "ordered mean distances by cluster")
Ids <- rownames(Distances.matrix)
SumDistAfter.df$Membership <- as.factor(groups)
OrderedDistAfter.df <- SumDistAfter.df[order(SumDistAfter.df$MeanDif),] #sort sum of distances
IndexByDistSum <- seq(from = 1, to = n)
OrderedDistAfter.df$IndexByDistSum <- IndexByDistSum
outfile3 <- paste(family,"_distances_pplot_after_sr.png") #name third outfile
legendtitle <- paste(family, "ordered mean distances by cluster")
ggplot(data=OrderedDistAfter.df, aes(IndexByDistSum, MeanDif)) +
geom_point(aes(colour = Membership), size = 2, alpha = 0.2) +
theme(legend.position="top") +
labs(color= legendtitle )
fviz_pca_ind(res.pca,
col.ind = groups, # color by groups
palette = c("#00AFBB", "#FC4E07", "#50f0d0", "#f05070", "#d050f0", "#70f050", "#f0d050", "#ffd88d", "#5086a7", "#dd9082" ,"#093d3a", "#196f69", "#786045", "#d59c2c", "#336936", "#d050f0", "#70f050", "#f0d050", "#50f0d0", "#f05070"),
addEllipses = TRUE,
legend.title = "cluster",
label = "none",
title = paste(family, "clusters")
)
fviz_pca_ind(res.pca,
col.ind = groups, # color by groups
palette = c("#00AFBB",
"#FC4E07",
"#50f0d0",
"#f05070",
"#d050f0",
"#70f050",
"#f0d050",
"#ffd88d",
"#5086a7",
"#dd9082",
"#093d3a",
"#196f69",
"#786045",
"#d59c2c",
"#336936",
"#d050f0",
"#70f050",
"#f0d050",
"#50f0d0",
"#f05070"),
addEllipses = TRUE,
legend.title = "cluster",
label = "none",
title = paste(family, "clusters")
)
dev.off()
fviz_pca_ind(res.pca,
col.ind = groups, # color by groups
palette = c("#00AFBB",
"#FC4E07",
"#50f0d0",
"#f05070",
"#d050f0",
"#70f050",
"#f0d050",
"#ffd88d",
"#5086a7",
"#dd9082",
"#093d3a",
"#196f69",
"#786045",
"#d59c2c",
"#336936",
"#d050f0",
"#70f050",
"#f0d050",
"#50f0d0",
"#f05070"),
addEllipses = TRUE,
legend.title = "cluster",
label = "none",
title = paste(family, "clusters")
)
fviz_pca_ind(res.pca,
col.ind = groups, # color by groups
palette = c("#00AFBB",
"#FC4E07",
"#50f0d0",
"#f05070",
"#d050f0",
"#70f050",
"#f0d050",
"#ffd88d",
"#5086a7",
"#dd9082",
"#093d3a",
"#196f69",
"#786045",
"#d59c2c",
"#336936",
"#d050f0",
"#70f050",
"#f0d050",
"#50f0d0",
"#f05070"),
addEllipses = TRUE,
legend.title = "cluster",
label = "none",
title = paste(family, "clusters after sample reduction")
)
dev.off()
setwd("../Clustering_graphics/") #Coming back
#Rebuilding data object
setwd("../Central_moments_and_covariance_vectors_CPFSCC/") #Location of CPFSCC vectors files
file_suffix3 <- ("CPFSCC_vectors.txt") #Suffix to build input filename
family_CPFSCC_file <- paste(family,file_suffix3, sep = "_") #Read filename
CPFSCC <- as.matrix(read.csv(family_CPFSCC_file, header = TRUE, sep = ",", dec = ".")) #Transform to matrix
TransposeCPFSCC <- t(CPFSCC) #Transpose matrix
colnames(TransposeCPFSCC) <- c('D1','D2','D3','D4','D5','D6','D7','D8','D9','D10','D11','D12','D13','D14','D15','D16','D17','D18','D19','D20','D21','D22','D23','D24','D25','D26','D27','D28') #Name columns dimensions
CPFSCC.df <- as.data.frame(TransposeCPFSCC) # Object datos is the final input for the upcoming computations
setwd("../Clustering_graphics/") #Coming back
#Subset deleting with TaxDel
TaxDelSubset <- rownames_to_column(CPFSCC.df)
TaxDelSubset$Membership <- TaxidPertenencia$Pertenencia
TaxDelSubset <- TaxDelSubset[!(TaxDelSubset$rowname %in% TaxDel), ]
groups <- as.factor(TaxDelSubset$Membership) #recover clusters
row.names(TaxDelSubset) <- TaxDelSubset$rowname
TaxDelSubset$rowname <- NULL
TaxDelSubset$Membership <- NULL
#Clusters PCA
res.pca <- prcomp(TaxDelSubset, scale = TRUE) #make PCA
#Draw PCA and ellipses
setwd("../Clustering_graphics")
outfile4 <- paste(family,"_PCA_clusters_after_sr.png") #sr stands for "sample reduction"
#png(outfile4)
#png(outfile4)
fviz_pca_ind(res.pca,
col.ind = groups, # color by groups
palette = c("#00AFBB",
"#FC4E07",
"#50f0d0",
"#f05070",
"#d050f0",
"#70f050",
"#f0d050",
"#ffd88d",
"#5086a7",
"#dd9082",
"#093d3a",
"#196f69",
"#786045",
"#d59c2c",
"#336936",
"#d050f0",
"#70f050",
"#f0d050",
"#50f0d0",
"#f05070"),
addEllipses = TRUE,
legend.title = "cluster",
label = "none",
title = paste(family, "clusters after sample reduction")
)
dev.off()
#Linear plot
Distances <- dist(TaxDelSubset, method = "euclidean", diag=TRUE) #Estimate pairwise distances
Distances.matrix <- as.matrix(Distances) #Transform to matrix
n <- nrow(Distances.matrix) #number of genomes
SumDistAfter <- (rowSums(Distances.matrix)) #get sum of distances by genome
SumDistAfter.df <- as.data.frame(SumDistAfter) #transform to data frame
mean_Distance <- (SumDistAfter.df$SumDist)/ene #get average sum of distances per genome
SumDistAfter.df$MeanDif <- mean_Distance #save average sum to data frame
Ids <- rownames(Distances.matrix)
SumDistAfter.df$Membership <- as.factor(groups)
OrderedDistAfter.df <- SumDistAfter.df[order(SumDistAfter.df$MeanDif),] #sort sum of distances
IndexByDistSum <- seq(from = 1, to = n)
OrderedDistAfter.df$IndexByDistSum <- IndexByDistSum
outfile3 <- paste(family,"_distances_pplot_after_sr.png") #name third outfile
legendtitle <- paste(family, "ordered distances by cluster after sr")
#png(outfile3) #assign third output
ggplot(data=OrderedDistAfter.df, aes(IndexByDistSum, MeanDif)) +
geom_point(aes(colour = Membership), size = 2, alpha = 0.2) +
theme(legend.position="top") +
labs(color= legendtitle )
outfile3 <- paste(family,"_distances_pplot_after_sr_by_", PosArgs[2], "_percent.png") #name third outfile
outfile3 <- paste(family,"_distances_pplot_after_sr_by_", PosArgs[2], "_percent.png") #name third outfile
